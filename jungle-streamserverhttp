#!/bin/bash

#!/bin/bash

#  Copyright 2020 jungle-team.com <grupo telegram: https://t.me/joinchat/Bv0_2hZ8jH6dsUJFoYG-Rg>
#
#  jungle-streamserverhttp
# 
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#  
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#  
#

# variables
PYTHONSCRIPT="http://tropical.jungle-team.online/script/httpserver.py"
listam3u="https://raw.githubusercontent.com/jungla-team/movistar_m3u/master/movistar.m3u8"
actualizacion=$(wget -O- -q --no-check-certificate https://raw.githubusercontent.com/jungla-team/utilidades/master/fecha-actualizacion )
#IP=$(ip route get 1.2.3.4 | grep "src" | awk '{ print $NF }')
#ip -o route get to 8.8.8.8 | sed -n 's/.*src \([0-9.]\+\).*/\1/p'
INTERFACE=$(awk '$2 == 00000000 { print $1 }' /proc/net/route)
IP=$(ip addr show dev "$INTERFACE" | awk '$1 == "inet" { sub("/.*", "", $2); print $2 }')
IPMESSAGE=$(ip addr show dev "$INTERFACE" | awk '$1 == "inet" { sub("/.*", "", $2); print $2 }')
PUERTO="8001"
ZTPUERTO="8002"
HTTPPORT="8000"
arr=()

#funciones script
VERDE='\033[0;32m'
ROJO='\033[0;31m'
AZUL='\033[0;34m'
NC='\033[0m'
AMARILLO='\033[1;33m'

function logo(){
	clear
	echo -e "\e[32m${VERDE} ******************************************************************************\e[0m"
	echo -e "\e[32m${VERDE} *      _ _    _ _   _  _____ _      ______   _______ ______          __  __  *\e[0m"
    echo -e "\e[32m${VERDE} *     | | |  | | \ | |/ ____| |    |  ____| |__   __|  ____|   /\   |  \/  | *\e[0m"
    echo -e "\e[32m${VERDE} *     | | |  | |  \| | |  __| |    | |__ ______| |  | |__     /  \  | \  / | *\e[0m"
    echo -e "\e[32m${VERDE} *  _  | | |  | |     | | |_ | |    |  __|______| |  |  __|   / /\ \ | |\/| | *\e[0m"
    echo -e "\e[32m${VERDE} * | |_| | |__| | |\  | |__| | |____| |____     | |  | |____ / ____ \| |  | | *\e[0m"
    echo -e "\e[32m${VERDE} * \____/ \____/|_| \_|\_____|______|______|    |_|  |______/_/    \_\_|  |_| *\e[0m"        
	echo -e "\e[32m${VERDE} *        																	 *\e[0m"
	echo -e "\e[32m${VERDE} *                          Creacion m3u y epg           					 *\e[0m"
	echo -e "\e[32m${VERDE} *      grupo telegram: https://t.me/joinchat/Bv0_2hZ8jH6dsUJFoYG-Rg          *\e[0m"
	echo -e "\e[32m${VERDE} *                                                                            *\e[0m"
	echo -e "\e[32m${VERDE} *                           jungle-team.com                                  *\e[0m"
	echo -e "\e[32m${VERDE} ******************************************************************************\e[0m"
}

function logofin(){
	clear
	echo -e "\e[32m${AZUL} ******************************************************************************\e[0m"
	echo -e "\e[32m${AZUL} *                  EJECUCION SCRIPT VERSION 2.0 FINALIZADA                   *\e[0m"
	echo -e "\e[32m${AZUL} *           Soporte: https://t.me/joinchat/Bv0_2hZ8jH6dsUJFoYG-Rg            *\e[0m" 
	echo -e "\e[32m${AZUL} *                 con mucho ⅽ[_] ͌ + (♥) jungle-team 2019		      			*\e[0m" 
	echo -e "\e[32m${AZUL} ******************************************************************************\e[0m"

}

function Mensaje() {
	echo -e "$2$1${NC}"
}

function Error() {
	echo -e "\n\a  ${ROJO} $1${NC}" 1>&2
	exit 1
}

function check_variable() {
	VARIABLE="$1"
	if [[ ! $VARIABLE =~ ^(|-pt|--port|-u|--usuario|-p|--passwd|-zt|--ztport|-sp|--streamport|-uninstall)$ ]]; then
		Mensaje "Variable aceptada" $VERDE
	else
		Error "Error! Te has dejado variables sin poner"
	fi
}


##############funciones creacion Server web stream local###############

function check_passwd() {
    if [ ! -z $USUARIO ] || [ ! -z $PASSWD ]; then
        pass=$(passwd -S | grep "NP")
        if [ ! $? -ne 0 ]; then
            Error "anormal estas metiendo passwd sin tenerla en el deco"
        fi
    fi
}

function check_autorizacion() {
    if [ ! -z $USUARIO ] || [ ! -z $PASSWD ]; then
        auweb="config.OpenWebif.auth=true"
        austream="config.OpenWebif.auth_for_streaming=true"
        directorio="/etc/enigma2/settings"
        proxy=$(opkg list-installed | grep streamproxy)
        if [ ! $? -ne 0 ] && [ $(grep -F -i "$auweb" $directorio) ] && [ $(grep -F -i "$austream" $directorio) ]; then
            Mensaje "Se encontro autentificacion mediante streamproxy" $VERDE
        else 
            if [ $(grep -F -i "config.streaming.authentication=true" $directorio) ]; then
                Mensaje "Se encontro autentificacion enigma2" $VERDE
            else
                Mensaje "No tienes los elementos de seguridad en tu receptor, no uses -u -p" $ROJO
                echo " "
                Mensaje "Pasos necesarios para activar autenticacion" $AMARILLO
                Mensaje "1.- Activar en openwebif: autenticación enlace http" $VERDE
                Mensaje "2.- Activar en openwebif: habilitar autenticación para streaming" $VERDE
                Mensaje "3.- Instalar streamproxy: opkg install enigma2-streamproxy" $VERDE
                echo " "
                Mensaje "Una vez hecho esos pasos vuelva a ejecutar el script" $AMARILLO
                exit
            fi
        fi
    fi
}

function decimal() {
	if [[ $1 =~ ^-?[0-9]+$ ]]; then
		Mensaje "$1 es un numero decimal" $VERDE
	else
		Error "$1 no es un numero decimal"
	fi
}
	
function valida_usuario() {

	USUARIOS=($(cat /etc/passwd | cut -d : -f 1 | awk '{ system("passwd -S " $0) }' | grep P | awk '{print $1}'))
	echo "${USUARIOS[@]}"
	if [[ " ${USUARIOS[@]} " =~ " ${1} " ]]; then
        Mensaje "el usuario $1 existe en el sistema" $VERDE
	else
    	Error "el usuario $1 no existe en el sistema"
	fi
}


function comprueba_usuario() {
	if [ ! -z $USUARIO ]; then
		if [ ! -z $PASSWD ]; then
			IP=${USUARIO}:${PASSWD}@${IP}
			echo "ip = $IP"
			echo "USUARIO = $USUARIO"
		else
			Error "No se puede usar usuario sin password"
		fi
	else
		IP=${IP}
		echo "ip = $IP"
	fi
}

function create_m3u() {
	[ -d /home/root/koala/ ] && rm -r /home/root/koala/
	crear_dir
	wget --no-check-certificate $listam3u -P /home/root/koala/
	sed -i s/IP/$IP/g /home/root/koala/movistar.m3u8
	if [ -z $PUERTO ]; then
        PUERTO="8001"
    else
		PUERTO=$PUERTO
	fi
	sed -i s/PUERTO/$PUERTO/g /home/root/koala/movistar.m3u8
	Mensaje "/home/root/koala/movistar.m3u8 creado" $VERDE
	ARCHIVO1="$IPMESSAGE:$HTTPPORT/movistar.m3u8        -- lista local"
	arr+=( "$ARCHIVO1" )
}

function crear_dir() {

	if [ ! -d /home/root/koala ]; then
		mkdir -p /home/root/koala
	fi
	Mensaje "carpeta /home/root/koala creada" $VERDE
}


function instalacion_simplehttpserver() {
	
	if [ -e /var/run/simplehttpserver.pid ]; then
		kill $(cat /var/run/simplehttpserver.pid)
		rm /var/run/simplehttpserver.pid
	fi
	[ -e /usr/bin/httpserver.py ] && rm -r /usr/bin/httpserver.py
	
	[ -e /etc/init.d/simplehttpserver-daemom ] && rm -r /etc/init.d/simplehttpserver-daemom

	[ -L /etc/rc3.d/S98simplehttpserver-daemom ] && rm -r /etc/rc3.d/S98simplehttpserver-daemom
	
	[ -e /home/root/generic.sh ] && rm -r /home/root/generic.sh
	
	wget $PYTHONSCRIPT -P /usr/bin/
	chmod +x /usr/bin/httpserver.py
	if [ -z $HTTPPORT ]; then
        HTTPPORT="8000"
    else
		HTTPPORT=$HTTPPORT
	fi
	
	sed -i s/8000/$HTTPPORT/g /usr/bin/httpserver.py
	Mensaje "Instalando simplehttpserver oealliance....." $VERDE
	start_daemom
	add_to_crontab
	mostrar_mensajes
}

function add_to_crontab() {
	# descargamos la epg pàra empezar a disfrutar de ella
	/usr/bin/wget -qO /home/root/koala/koala_epg.xml.gz http://tropical.jungle-team.online/epg/koala_kodi.xml.gz
	cronjob_editor "30 12 * * *" "/usr/bin/wget -qO /home/root/koala/koala_epg.xml.gz http://tropical.jungle-team.online/epg/koala_kodi.xml.gz" "add"
	Mensaje "Añadido un cron para descarga de epg a las 12:30 diariamente" $VERDE
}

function start_daemom() {
		cat <<'EOF' > /etc/init.d/simplehttpserver-daemom
#!/bin/sh

case "$1" in
	start)
		cd /home/root/koala/
		/usr/bin/httpserver.py &> /dev/null &
		echo $!>/var/run/simplehttpserver.pid
		;;
	stop)
		kill `cat /var/run/simplehttpserver.pid`
		rm /var/run/simplehttpserver.pid
		;;
	restart|reload)
		$0 stop
		$0 start
		;;
	status)
		if [ -e /var/run/simplehttpserver.pid ]; then
			echo SimpleHTTPServer is running, pid=`cat /var/run/simplehttpserver.pid`
		else
			echo SimpleHTTPServer is NOT running
			exit 1
		fi
		;;
	*)
		echo "Usage: $0 {start|stop|status|restart}"
		exit 1
		;;
esac

exit 0
EOF

	chmod +x /etc/init.d/simplehttpserver-daemom
	ln -s /etc/init.d/simplehttpserver-daemom /etc/rc3.d/S98simplehttpserver-daemom
	/etc/init.d/simplehttpserver-daemom start
	Mensaje "Instalado e iniciado el servicio /etc/init.d/simplehttpserver-daemom" $VERDE
}

function borrado(){

	# borrado archivos
	peligro
	[ -e /var/run/simplehttpserver.pid ] && /etc/init.d/simplehttpserver-daemom stop

	[ -e /usr/bin/httpserver.py ] && rm -r /usr/bin/httpserver.py
	
	[ -e /etc/init.d/simplehttpserver-daemom ] && rm -r /etc/init.d/simplehttpserver-daemom

	[ -L /etc/rc3.d/S98simplehttpserver-daemom ] && rm -r /etc/rc3.d/S98simplehttpserver-daemom
	
	[ -d /home/root/koala/ ] && rm -r /home/root/koala/
	
	[ -e /home/root/generic.sh ] && rm -r /home/root/generic.sh
	
	#crontab -l | grep -v 'koala_epg.xml.gz'  | crontab -
	cronjob_editor "30 12 * * *" "/usr/bin/wget -qO /home/root/koala/koala_epg.xml.gz http://tropical.jungle-team.online/epg/koala_kodi.xml.gz" "remove"

	Mensaje "La desinstalacion se ha completado" $ROJO
	exit

}

function peligro() {

	Mensaje "Tienes 15 segundos para pulsar Control+C o cerrar terminal para evitar la autodestruccion" $ROJO
    secs=15
    while [ $secs -gt -1 ]; do
       echo -ne "sin prisas en ${ROJO}$secs${NC} segundos\033[0K\r"
       sleep 1
       : $((secs--))
    done

    printf "\n"
}

function zerotier() {
	
	if [ -f /usr/sbin/zerotier-cli ]; then
		if [[ $(/usr/sbin/zerotier-cli info | grep ONLINE) ]]; then
			if [ -z $ZTPUERTO ]; then
				ZTPUERTO="8002"
			else
				ZTPUERTO=$ZTPUERTO
			fi
			IPTOZ=$(ip addr show dev "$INTERFACE" | awk '$1 == "inet" { sub("/.*", "", $2); print $2 }')
			ZEROTIER=$(ifconfig -a | sed -n 's/^\([^ ]\+\).*/\1/p' | grep zt)
			IPZEROTIER=$(ip addr show ${ZEROTIER} | grep "inet\b" | awk '{print $2}' | cut -d/ -f1)
			echo $IPZEROTIER
			cp /home/root/koala/movistar.m3u8 /home/root/koala/zerotier.m3u8
			cp /home/root/koala/movistar.m3u8 /home/root/koala/zerotier-transcode.m3u8
			hisilicon=$(cat /proc/stb/encoder/enable)
			if [ $? -ne 0 ]; then
				echo "tiene hisilicon"
				sed -i s/$IPTOZ/$IPZEROTIER/g /home/root/koala/zerotier-transcode.m3u8
				sed -i s/C00000:0:0:0:/C00000:0:0:0:?bitrate=1000000?width=1024?height=768?vcodec=h265?aspectratio=2?interlaced=0/g /home/root/koala/zerotier-transcode.m3u8
				sed -i s/$PUERTO/8001/g /home/root/koala/zerotier-transcode.m3u8
				sed -i s/$IPTOZ/$IPZEROTIER/g /home/root/koala/zerotier.m3u8
				sed -i s/$PUERTO/8001/g /home/root/koala/zerotier.m3u8
				Mensaje "/home/root/koala/zerotier.m3u8 creado" $VERDE
				ARCHIVO2="$IPZEROTIER:$HTTPPORT/zerotier.m3u8       -- lista zerotier"
				ARCHIVO3="$IPZEROTIER:$HTTPPORT/zerotier-transcode.m3u8       -- lista zerotier con transcode"
				arr+=( "$ARCHIVO2" )
				arr+=( "$ARCHIVO3" )
				
			else
				sed -i s/$IPTOZ/$IPZEROTIER/g /home/root/koala/zerotier-transcode.m3u8
				sed -i s/$PUERTO/$ZTPUERTO/g /home/root/koala/zerotier-transcode.m3u8
				sed -i s/$IPTOZ/$IPZEROTIER/g /home/root/koala/zerotier.m3u8
				sed -i s/$PUERTO/$ZTPUERTO/g /home/root/koala/zerotier.m3u8
				ARCHIVO2="$IPZEROTIER:$HTTPPORT/zerotier.m3u8       -- lista zerotier"
				ARCHIVO3="$IPZEROTIER:$HTTPPORT/zerotier-transcode.m3u8       -- lista zerotier con transcode"
				arr+=( "$ARCHIVO2" )
				arr+=( "$ARCHIVO3" )
			#cp /home/root/koala/movistar.m3u8 /home/root/koala/zerotier.m3u8
			#hisilicon=$(cat /proc/stb/encoder/enable)
			#if [ $? -ne 0 ]; then
				#echo "tiene hisilicon"
				#sed -i s/$IPTOZ/$IPZEROTIER/g /home/root/koala/zerotier.m3u8
				#sed -i s/C00000:0:0:0:/C00000:0:0:0:?bitrate=1000000?width=1024?height=768?vcodec=h265?aspectratio=2?interlaced=0/g /home/root/koala/zerotier.m3u8
				#sed -i s/$PUERTO/8001/g /home/root/koala/zerotier.m3u8
				#Mensaje "/home/root/koala/zerotier.m3u8 creado" $VERDE
			#else
				#sed -i s/$IPTOZ/$IPZEROTIER/g /home/root/koala/zerotier.m3u8
				#sed -i s/$PUERTO/$ZTPUERTO/g /home/root/koala/zerotier.m3u8
				Mensaje "/home/root/koala/zerotier.m3u8 creado" $VERDE
			fi
		fi
	fi
}

function transcodificado() {

	cp /home/root/koala/movistar.m3u8 /home/root/koala/transcodificado.m3u8
	hisilicon=$(cat /proc/stb/encoder/enable)
	if [ $? -ne 0 ]; then
		Mensaje "tiene hisilicon" $VERDE
		sed -i s/C00000:0:0:0:/C00000:0:0:0:?bitrate=1000000?width=1024?height=768?vcodec=h265?aspectratio=2?interlaced=0/g /home/root/koala/transcodificado.m3u8
		sed -i s/$PUERTO/8001/g /home/root/koala/transcodificado.m3u8
		Mensaje "/home/root/koala/transcodificado.m3u8 creado" $VERDE
		ARCHIVO4="$IPMESSAGE:$HTTPPORT/transcodificado.m3u8 -- lista con transcode"
		arr+=( "$ARCHIVO4" )
	else
		sed -i s/$PUERTO/$ZTPUERTO/g /home/root/koala/transcodificado.m3u8
		Mensaje "/home/root/koala/transcodificado.m3u8 creado" $VERDE
		ARCHIVO4="$IPMESSAGE:$HTTPPORT/transcodificado.m3u8 -- lista con transcode"
		arr+=( "$ARCHIVO4" )
	fi
}

function check_tuner() {

    tuner=$(ls -1  /dev/dvb/adapter*/* | grep frontend1)
    if [ $? -ne 0 ]; then
        Mensaje "tiene solo un tuner se crea lista zap" $VERDE
        lista_zap="https://raw.githubusercontent.com/jungla-team/movistar_m3u/master/movistar_zap.m3u8"
        wget --no-check-certificate $lista_zap -P /home/root/koala/
        sed -i s/IP/$IP/g /home/root/koala/movistar_zap.m3u8
        Mensaje "/home/root/koala/movistar_zap.m3u8 creado" $VERDE
        ARCHIVO5="$IPMESSAGE:$HTTPPORT/movistar_zap.m3u8 -- lista zap"
        arr+=( "$ARCHIVO5" )
	fi
}

cronjob_editor () {
# usage: cronjob_editor '<interval>' '<command>' <add|remove>

if [[ -z "$1" ]] ;then printf " no interval specified\n" ;fi
if [[ -z "$2" ]] ;then printf " no command specified\n" ;fi
if [[ -z "$3" ]] ;then printf " no action specified\n" ;fi

if [[ "$3" == add ]] ;then
    # add cronjob, no duplication:
    ( crontab -l | grep -v -F -w "$2" ; echo "$1 $2" ) | crontab -
elif [[ "$3" == remove ]] ;then
    # remove cronjob:
    ( crontab -l | grep -v -F -w "$2" ) | crontab -
fi
}

function mostrar_mensajes() {

IPMESSAGE=$(ip addr show dev "$INTERFACE" | awk '$1 == "inet" { sub("/.*", "", $2); print $2 }')
Mensaje "En directorio /home/root/koala/ se han creado los archivos necesarios" $VERDE
echo " "
for i in "${arr[@]}"
do
    Mensaje "$i" $VERDE
    echo " "
done

Mensaje "$actualizacion" $ROJO
}

#function mostrar_mensajes() {

#IPMESSAGE=$(ip addr show dev "$INTERFACE" | awk '$1 == "inet" { sub("/.*", "", $2); print $2 }')
#Mensaje "En directorio /home/root/koala/ se han creado los archivos necesarios" $VERDE
#echo " "
#Mensaje ""$IPMESSAGE":$HTTPPORT/movistar.m3u8        -- lista local" $VERDE
#echo " "
#Mensaje ""$IPMESSAGE":$HTTPPORT/transcodificado.m3u8 -- lista con transcode" $VERDE
#echo " "
#Mensaje ""$IPZEROTIER":$HTTPPORT/zerotier.m3u8       -- se crea con transcode si tienes zerotier" $VERDE
#echo " "
#Mensaje ""$IPMESSAGE":$HTTPPORT/koala_epg.xml.gz     -- url de la EPG" $VERDE
#echo " "
#Mensaje "$actualizacion" $ROJO
#}



while test $# -gt 0
do
	case "$1" in
		-h|--help)
			Mensaje "$0 [opciones] [argumentos]" $AMARILLO
			echo " "
			Mensaje "opciones: argumentos" $AMARILLO
			Mensaje "-h,  --help                    -- muestra la ayuda" $VERDE
			Mensaje "-pt, --port 8001               -- puerto para streaming" $VERDE
			Mensaje "-zt, --ztport 8002             -- puerto para transcodificado" $VERDE
			Mensaje "-sp, --streamport 8000         -- puerto servidor de ficheros" $VERDE
			Mensaje "-u,  --usuario usuario         -- usuario para stream" $VERDE
			Mensaje "-p,  --passwd passwd           -- passwd para stream" $VERDE
			Mensaje "-uninstall                     -- desinstala streamhttpserver" $VERDE
			echo " "
			Mensaje "URLs para acceder a las listas m3u8" $AMARILLO
			Mensaje "IP:8000/movistar.m3u8          -- lista local" $AZUL
			Mensaje "IP:8000/transcodificado.m3u8   -- lista transcodificada" $AZUL
			Mensaje "IP:8000/zerotier.m3u8          -- si tenemos zerotier" $AZUL
			Mensaje "IP:8000/koala_epg.xml.gz       -- url EPG" $AZUL
			exit 0
			;;

		-pt|--port)
			PUERTO="${2:-8001}"
			echo $PUERTO
			check_variable $PUERTO
			decimal $PUERTO
			;;
		-u|--usuario)
			USUARIO=$2
			echo $USUARIO
			check_variable $USUARIO
			valida_usuario $USUARIO
			;;
		-p|--passwd)
			PASSWD=$2
			echo $PASSWD
			check_variable $PASSWD
			;;
		-zt|--ztport)
			ZTPUERTO=$2
			echo $ZTPUERTO
			check_variable $ZTPUERTO
			decimal $ZTPUERTO
			;;
		-sp|--streamport)
			HTTPPORT="${2:-8000}"
			echo $HTTPPORT
			check_variable $HTTPPORT
			decimal $HTTPPORT
			;;
		-uninstall)
			borrado
			;;
		-*) echo "bad option $1"
			exit 1
			;;
		#*) echo "argument $1"
			#    ;;
	esac
	shift
done


logo
check_passwd
check_autorizacion
comprueba_usuario 
create_m3u
transcodificado
instalacion_simplehttpserver
zerotier
check_tuner
logofin
mostrar_mensajes

exit 0
